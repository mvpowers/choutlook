// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App should render correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Navbar
          handleChange={[Function]}
          password=""
        />,
        <Unknown />,
        <App__Content>
          <Unknown />
          <Unknown />
          <MessageList
            displayMsg={Array []}
            replyFocus={false}
          />
          <MessageView
            discardSendMsg={[Function]}
            editingUsername={false}
            handleBlur={[Function]}
            handleChange={[Function]}
            handleFocus={[Function]}
            sendMsg=""
            submitOnEnter={[Function]}
            submitSendMsg={[Function]}
            toggleEditUsername={[Function]}
            username="anonymous"
          />
        </App__Content>,
        <HelmetWrapper
          defer={true}
          encodeSpecialCharacters={true}
        >
          <title>
            Choutlook
          </title>
        </HelmetWrapper>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "handleChange": [Function],
          "password": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Unknown />,
            <Unknown />,
            <MessageList
              displayMsg={Array []}
              replyFocus={false}
            />,
            <MessageView
              discardSendMsg={[Function]}
              editingUsername={false}
              handleBlur={[Function]}
              handleChange={[Function]}
              handleFocus={[Function]}
              sendMsg=""
              submitOnEnter={[Function]}
              submitSendMsg={[Function]}
              toggleEditUsername={[Function]}
              username="anonymous"
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "displayMsg": Array [],
              "replyFocus": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "discardSendMsg": [Function],
              "editingUsername": false,
              "handleBlur": [Function],
              "handleChange": [Function],
              "handleFocus": [Function],
              "sendMsg": "",
              "submitOnEnter": [Function],
              "submitSendMsg": [Function],
              "toggleEditUsername": [Function],
              "username": "anonymous",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <title>
            Choutlook
          </title>,
          "defer": true,
          "encodeSpecialCharacters": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Choutlook",
          },
          "ref": null,
          "rendered": "Choutlook",
          "type": "title",
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Navbar
            handleChange={[Function]}
            password=""
          />,
          <Unknown />,
          <App__Content>
            <Unknown />
            <Unknown />
            <MessageList
              displayMsg={Array []}
              replyFocus={false}
            />
            <MessageView
              discardSendMsg={[Function]}
              editingUsername={false}
              handleBlur={[Function]}
              handleChange={[Function]}
              handleFocus={[Function]}
              sendMsg=""
              submitOnEnter={[Function]}
              submitSendMsg={[Function]}
              toggleEditUsername={[Function]}
              username="anonymous"
            />
          </App__Content>,
          <HelmetWrapper
            defer={true}
            encodeSpecialCharacters={true}
          >
            <title>
              Choutlook
            </title>
          </HelmetWrapper>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "handleChange": [Function],
            "password": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Unknown />,
              <Unknown />,
              <MessageList
                displayMsg={Array []}
                replyFocus={false}
              />,
              <MessageView
                discardSendMsg={[Function]}
                editingUsername={false}
                handleBlur={[Function]}
                handleChange={[Function]}
                handleFocus={[Function]}
                sendMsg=""
                submitOnEnter={[Function]}
                submitSendMsg={[Function]}
                toggleEditUsername={[Function]}
                username="anonymous"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "displayMsg": Array [],
                "replyFocus": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "discardSendMsg": [Function],
                "editingUsername": false,
                "handleBlur": [Function],
                "handleChange": [Function],
                "handleFocus": [Function],
                "sendMsg": "",
                "submitOnEnter": [Function],
                "submitSendMsg": [Function],
                "toggleEditUsername": [Function],
                "username": "anonymous",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <title>
              Choutlook
            </title>,
            "defer": true,
            "encodeSpecialCharacters": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Choutlook",
            },
            "ref": null,
            "rendered": "Choutlook",
            "type": "title",
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
